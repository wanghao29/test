<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<welcome-file-list>
		<welcome-file>login.jsp</welcome-file>
	</welcome-file-list>

    <!-- 在上下文context-param中设置profile.active的默认值 -->
    <!-- 设置active后default失效，web启动时会加载对应的环境信息 -->
    <context-param>
        <param-name>spring.profiles.default</param-name>     <!--生产环境tomcat的catalina.sh已配置：JAVA_OPTS="-Dspring.profiles.active=production" -->  
        <param-value>development</param-value>               <!--可通过jps -v查看 -->
    </context-param>	
	<!-- log4j配置，文件路径，因为是跟随项目启动 -->
		<context-param>     
		      <param-name>log4jConfigLocation</param-name>     
		      <param-value>/WEB-INF/log4j.xml</param-value>     
		</context-param>     
		<!-- 配置log4j.xml变量，如果需要动态的就使用下面方式，使用方法${name} --> 
		<context-param> 
		  <param-name>controller</param-name> 
		  <param-value>controller-log</param-value> 
		</context-param> 
		
		<context-param> 
		  <param-name>loggingLevel</param-name> 
		  <param-value>info</param-value> 
		</context-param> 
		 <!-- 加载log4j配置文件 -->
		 <listener>
		  <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
		 </listener>
 
	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring/applicationContext*.xml</param-value>
	</context-param>
	
    <!-- spring监听器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
    <!-- 防止spring内存溢出监听器 -->
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>

	<!-- Processes application requests -->
	<servlet>
		<servlet-name>spring_mvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		<init-param>
	        <param-name>spring.profiles.default</param-name>        <!--生产环境tomcat的catalina.sh已配置：JAVA_OPTS="-Dspring.profiles.active=production" -->                                        
	        <param-value>development</param-value>                  <!--可通过jps -v查看 -->
	    </init-param>		
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>spring_mvc</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	


	

<filter>  
        <filter-name>characterEncodingFilter</filter-name>  
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
        <init-param>  
            <param-name>encoding</param-name>  
            <param-value>UTF-8</param-value>  
        </init-param>  
        <init-param>  
            <param-name>forceEncoding</param-name>  
            <param-value>true</param-value>  
        </init-param>  
    </filter>  
    <filter-mapping>  
        <filter-name>characterEncodingFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>  

	<filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
	            <param-name>targetFilterLifecycle</param-name>
	            <param-value>true</param-value>
	     </init-param>
	    </filter>
	
	    <filter-mapping>
	        <filter-name>shiroFilter</filter-name>
	        <url-pattern>/*</url-pattern>
	    </filter-mapping>
	    
	     <filter>
    <filter-name>sitemesh</filter-name>
        <filter-class>org.sitemesh.config.ConfigurableSiteMeshFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>sitemesh</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
<!-- <session-config>
  <session-timeout>1</session-timeout>
  </session-config> -->
  
  <session-config>
    <session-timeout>60</session-timeout>
</session-config>
</web-app>
