<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.asiainfo.cmc.authority.mapper.UserMapper">

    <insert id="add" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO zd_user(username,`password`,nickname,`status`)
        VALUES(#{username},#{password},#{nickname},#{status});
    </insert>

    <!-- 动态更新对象的写法 -->
    <update id="update" parameterType="User">
        UPDATE zd_user
        <set>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="password != null">
                `password` = #{password},
            </if>
            <if test="nickname != null">
                nickname = #{nickname},
            </if>
            <if test="status != null">
                `status` = #{status}
            </if>
        </set>
        WHERE
          id = #{id}
    </update>

    <delete id="delete" parameterType="int">
        DELETE FROM zd_user
        where id = #{id}
    </delete>

    <!--  批量删除 -->
    <delete id="batchDelete" parameterType="list">
        DELETE FROM zd_user
        where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <select id="load" parameterType="int" resultType="User">
        SELECT
            id,
            username,
            `password`,
            nickname,
            `status`
        FROM
            zd_user
        WHERE
            id = #{id}
    </select>

    <select id="listUser" resultType="User">
   <!--      SELECT
            id,
            username,
            `password`,
            nickname,
            `status`
        FROM
            zd_user -->
             SELECT
            u.id,
            u.username,
            u.password,
           u.nickname,
            u.status,
						r.name
        FROM
            zd_user u,zd_user_role u_r,zd_role r
where u.id=u_r.user_id and u_r.role_id = r.id
    </select>

    <select id="loadByUserName" parameterType="string" resultType="com.asiainfo.cmc.authority.pojo.User">
        SELECT
            id,
            username,
            `password`,
            nickname,
            `status`
        FROM
            zd_user
        WHERE
            username = #{username}
    </select>

    <select id="listByRole" parameterType="int" resultType="User">
        SELECT
            tu.id,
            tu.username,
            tu.`password`,
            tu.nickname,
            tu.`status`
        FROM
            zd_user tu
        LEFT JOIN zd_user_role tur ON tu.id = tur.user_id
        LEFT JOIN zd_role tr ON tur.role_id = tr.id
        WHERE tr.id =#{rid}
    </select>

    <!-- 根据用户 id 查询这个用户拥有的所有资源（这里的资源就代表权限） -->
    <select id="listAllResources" resultType="Resource" parameterType="int">
        SELECT tr.`id`,tr.`name`,tr.`permission`,tr.`url`
        FROM `zd_resource` tr
        LEFT JOIN `zd_role_resource` trr ON tr.`id` = trr.`resource_id`
        LEFT JOIN `zd_user_role` tur ON trr.`role_id` = tur.role_id
        WHERE tur.user_id = #{uid}
    </select>

    <!-- 根据用户 id 查询用户所具有的角色字符串表示 -->
    <select id="listRoleSnByUser" parameterType="int" resultType="string">
        SELECT
            tr.sn
        FROM `zd_role` tr
        LEFT JOIN `zd_user_role` tur ON tr.`id` = tur.role_id
        LEFT JOIN `zd_user` tu ON tur.`user_id` = tu.id
        WHERE tu.`id` = #{uid}
    </select>

    <!-- 根据用户 id 查询用户所具有的角色对象表示 -->
    <select id="listUserRole" parameterType="int" resultType="Role">
        SELECT
            tr.`id`,
            tr.`name`,
            tr.`sn`
            FROM `zd_role` tr
            LEFT JOIN `zd_user_role` tur ON tr.`id` = tur.role_id
            LEFT JOIN `zd_user` tu ON tur.`user_id` = tu.id
        WHERE tu.`id` = #{uid}
    </select>

</mapper>