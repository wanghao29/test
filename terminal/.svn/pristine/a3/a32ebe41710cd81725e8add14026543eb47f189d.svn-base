<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">  
        <property name="cacheManagerConfigFile" value="classpath:mapper/ehcache/ehcache.xml" />  
    </bean>  
    <!-- 凭证匹配器 -->  
    <bean id="credentialsMatcher" class="com.asiainfo.cmc.authority.shiro.credentials.RetryLimitHashedCredentialsMatcher">  
        <constructor-arg ref="cacheManager" />  
        <property name="hashAlgorithmName" value="md5" />  
<!--         <property name="hashIterations" value="2" />   -->
<!--         <property name="storedCredentialsHexEncoded" value="true" />   -->
    </bean>  
    <!-- 会话ID 生成器 -->  
    <bean id="sessionIdGenerator"  
        class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />  
    <!-- 会话DAO -->  
    <bean id="sessionDAO"  
        class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">  
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache" />  
        <property name="sessionIdGenerator" ref="sessionIdGenerator" />  
    </bean>  
    <!-- 会话验证调度器 sessionValidationInterval：设置调度时间间隔 -->  
    <bean id="sessionValidationScheduler"  
        class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">  
        <property name="sessionValidationInterval" value="18000000" />  
        <property name="sessionManager" ref="sessionManager" />  
    </bean>  
    <!-- 会话Cookie 模板 -->  
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
        <constructor-arg value="sid" />  
        <property name="httpOnly" value="true" />  
        <property name="maxAge" value="1800" />  
    </bean>  
    <!-- 记住密码cookie -->  
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
        <constructor-arg value="rememberMe" />  
        <property name="httpOnly" value="true" />  
        <property name="maxAge" value="2592000" /><!-- 30天 30*24*60*60 -->  
    </bean>  
    <!-- rememberMe管理器，cipherKey是加密rememberMe Cookie的密钥；默认AES算 -->  
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">  
        <property name="cipherKey"  
            value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />  
        <property name="cookie" ref="rememberMeCookie" />  
    </bean>  
     <!-- 监听会话 -->  
    <bean id="sessionListener1" class="com.asiainfo.cmc.authority.shiro.listener.MySessionListener"></bean>  
    <!-- 会话管理器 globalSessionTimeout：设置全局会话超时时间，默认30分钟，即如果30分钟内没有访问会话将过期 sessionValidationSchedulerEnabled：是否开启会话验证器，默认是开启的 -->  
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">  
        <property name="globalSessionTimeout" value="1800000" />
        <property name="deleteInvalidSessions" value="true" />  
        <property name="sessionValidationSchedulerEnabled" value="true" />  
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler" />  
        <property name="sessionDAO" ref="sessionDAO" />  
        <property name="sessionIdCookieEnabled" value="true" />  
        <property name="sessionIdCookie" ref="sessionIdCookie" />  
        <property name="sessionListeners" ref="sessionListener1" />  
    </bean>  
   
    <!-- Realm实现 -->  
    <bean id="userRealm" class="com.asiainfo.cmc.authority.shiro.realm.UserRealm">  
        <!-- <property name="userService" ref="userService" /> -->  
        <!-- 将上面声明的密码匹配器注入到自定义 Realm 的属性中去 -->
        <property name="credentialsMatcher" ref="credentialsMatcher" />  
        <!-- 配置缓存相关 -->
        <!-- 启用缓存 -->
        <property name="cachingEnabled" value="true" />  
        <!-- 开启认证缓存 -->
        <property name="authenticationCachingEnabled" value="true" />  
        <!-- 指定认证缓存的名字(与 ehcache.xml 中声明的相同) -->
        <property name="authenticationCacheName" value="authenticationCache" />  
        <!--开启授权缓存 -->
        <property name="authorizationCachingEnabled" value="true" />  
        <!-- 指定授权缓存的名字(与 ehcache.xml 中声明的相同) -->
        <property name="authorizationCacheName" value="authorizationCache" />  
    </bean>  
    <!-- 安全管理器 -->  
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
        <property name="realm" ref="userRealm" />  
        <property name="sessionManager" ref="sessionManager" />  
        <property name="cacheManager" ref="cacheManager" />  
        <property name="rememberMeManager" ref="rememberMeManager" />  
    </bean>  
    <!-- kickoutSessionControlFilter 用于控制并发登录人数的 -->  
    <bean id="kickoutSessionControlFilter"  
        class="com.asiainfo.cmc.authority.shiro.listener.KickoutSessionControlFilter">  
        <property name="cacheManager" ref="cacheManager" />  
        <property name="sessionManager" ref="sessionManager" />  
        <property name="kickoutAfter" value="false" />  
        <property name="maxSession" value="1" />
        <property name="kickoutUrl" value="/?kickout=1" />  
    </bean>  
    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->  
    <bean  
        class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">  
        <property name="staticMethod"  
            value="org.apache.shiro.SecurityUtils.setSecurityManager" />  
        <property name="arguments" ref="securityManager" />  
    </bean>  
    <!-- Shiro 生命周期处理器 -->  
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />  
    <bean id="formAuthenticationFilter"  
        class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">  
        <property name="usernameParam" value="username" />  
        <property name="passwordParam" value="password" />  
        <property name="rememberMeParam" value="rememberMe" />  
        <property name="loginUrl" value="/login" />  
    </bean>  
    <!-- Shiro 的Web过滤器 -->  
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
        <property name="securityManager" ref="securityManager" />  
        <property name="loginUrl" value="/" />  
        <property name="successUrl" value="/admin/user/list.do" />  
        <property name="unauthorizedUrl" value="/unAuthorization.do" />  
        <property name="filters">  
            <util:map>  
                <entry key="authc" value-ref="formAuthenticationFilter" />  
                <entry key="kickout" value-ref="kickoutSessionControlFilter"/>  
            </util:map>  
        </property>  
        <property name="filterChainDefinitions">  
            <value>  
                /resources/** = anon  
                /index = anon  
                /unauthorized = anon  
                /main/login.do = anon
                <!--/logout = logout-->
                /**=user,kickout 
              
           
            </value>  
        </property>  
    </bean>  
    <bean    
    class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">    
    <property name="exceptionMappings">    
        <props>    
            <prop key="org.apache.shiro.authz.UnauthorizedException">    
                /unAuthorization
            </prop>    
            <prop key="org.apache.shiro.authz.UnauthenticatedException">    
                /login  
            </prop>    
        </props>    
    </property>    
</bean>   
</beans>
